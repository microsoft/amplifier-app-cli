# Full Profile
# Kitchen sink configuration with all available modules for comprehensive testing
# Inherits filesystem, bash tools, and redaction/logging hooks from base

[profile]
name = "full"
version = "1.0.0"
description = "Full configuration with all available tools, hooks, and agents"
extends = "base"

[session]
orchestrator = "loop-streaming" # Use streaming for better UX
context = "context-persistent"  # Use persistent context for state management
max_tokens = 200000             # Maximum capacity
compact_threshold = 0.9
auto_compact = true

[orchestrator.config]
extended_thinking = true # Enable thinking blocks for Claude Sonnet 4.5

# Additional providers (base provides anthropic)
[[providers]]
module = "provider-openai"
config.default_model = "gpt-5-mini"
priority = 2                        # Lower priority, anthropic is default

[[providers]]
module = "provider-azure-openai"
config.default_model = "gpt-5-mini"
priority = 3                        # Even lower priority

[[providers]]
module = "provider-ollama"
config.default_model = "llama3.2:3b"
priority = 4                         # Lowest priority for local models

# All available tools (filesystem and bash inherited from base)
[[tools]]
module = "tool-web"

[[tools]]
module = "tool-search"

[[tools]]
module = "tool-task"

# All available agents
[[agents]]
module = "agent-architect"

# Additional hooks beyond base (redaction and logging inherited)
[[hooks]]
module = "hooks-approval"
priority = 5 # Run before redaction
enabled = true
config.patterns = [
    "rm -rf",
    "sudo",
    "DELETE",
    "DROP",
] # Dangerous patterns to flag
config.auto_approve = false # Require manual approval

[[hooks]]
module = "hooks-backup"
priority = 20                                  # Run after redaction but before most processing
enabled = true
config.backup_dir = ".amplifier/local/backups"
config.max_backups = 10

# Cost-aware scheduler for managing API costs
[[hooks]]
module = "hooks-scheduler-cost-aware"
priority = 30
enabled = true
config.budget_limit = 10.0            # $10 budget
config.warn_threshold = 0.8           # Warn at 80% of budget

# Heuristic scheduler for optimizing performance
[[hooks]]
module = "hooks-scheduler-heuristic"
priority = 35
enabled = true
config.max_concurrent = 5
config.batch_size = 10
